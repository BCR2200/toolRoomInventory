<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{% block title %}Tool Room Inventory{% endblock %}</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    {% block extra_head %}{% endblock %}
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-dark bg-dark">
        <div class="container">
            <a class="navbar-brand" href="{{ url_for('dashboard') }}">Tool Room Inventory</a>
            <div class="navbar-nav ms-auto">
                {% block nav_items %}
                    <a class="nav-link" href="{{ url_for('dashboard') }}">Dashboard</a>
                    <a class="nav-link" href="{{ url_for('manage_tools') }}">Manage Tools</a>
                    <a class="nav-link" href="{{ url_for('manage_users') }}">Manage Users</a>
                {% endblock %}
            </div>
        </div>
    </nav>

    <div class="container mt-4">
        {# Toast nodes #}
        <div class="toast-container position-fixed top-0 end-0 p-3">
            <div id="notificationToast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
                <div class="toast-header">
                    <strong class="me-auto" id="toastTitle"></strong>
                    <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                </div>
                <div class="toast-body" id="toastMessage"></div>
            </div>
        </div>
        {% block content %}{% endblock %}
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    {# Toast Script #}
    <script>
        // Initialize the toast
        const toastElement = document.getElementById('notificationToast');
        const toastTitle = document.getElementById('toastTitle');
        const toastMessage = document.getElementById('toastMessage');
        const toast = new bootstrap.Toast(toastElement, {
            delay: 3000
        });

        // Function to show the toast
        function showToast(message, isSuccess) {
            // Set the title and message
            toastTitle.textContent = isSuccess ? 'Success' : 'Error';
            toastMessage.textContent = message;

            // Set the color theme
            toastElement.classList.remove('bg-success', 'bg-danger', 'text-white');
            if (isSuccess) {
                toastElement.classList.add('bg-success', 'text-white');
            } else {
                toastElement.classList.add('bg-danger', 'text-white');
            }

            // Show the toast
            toast.show();
        }

        // Check for result parameter in URL
        window.addEventListener('load', function() {
            const urlParams = new URLSearchParams(window.location.search);
            const result = urlParams.get('result');

            if (result) {
                try {
                    const resultData = JSON.parse(decodeURIComponent(result));
                    showToast(
                        resultData.message || (resultData.success ? 'Operation successful!' : 'Operation failed!'),
                        resultData.success
                    );
                } catch (e) {
                    console.error('Failed to parse result parameter:', e);
                }
            }
        });

    </script>
    {% block scripts %}
    {% endblock %}
</body>
</html>